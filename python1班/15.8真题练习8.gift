
::8-1:: 用语句mydict\=\{'a'\:1,'b'\:2,'c'\:3,'d'\:4\}定义了一个字典，以下语句中，可以输出字典键值的是？ {
    =print(mydict['c'])
    ~print(mydict('c'))
    ~print(mydict 'c')
    ~print(mydict\{'c'\})
}

::8-2:: 已知字典dict1\=\{0\:"zero",1\:"one",2\:"two",3\:"Three"\}，执行语句dict1[3]\="three"后，字典dict1的内容为？ {
    =\{0\:"zero",1\:"one",2\:"two",3\:"three"\}
    ~\{0\:"zero",1\:"one",2\:"two",3\:"Three"\}
    ~\{0\:"zero",1\:"one",2\:"two","3"\:three\}
    ~\{0\:"zero",1\:"one",2\:"two",3\:"Three",3\:"three"\}
}

::8-3:: 下列有关字典对象的说法，不正确的是？ {
    =可以通过字典的键找到对应的值，也可以通过值来找到对应的键
    ~在同一个字典中，值必须互不相同
    ~字典中的每个元素包含键和值两部分
    ~字典中的值可以是任意类型的数据
}

//20
::8-4:: 以下是一个猜数字程序，当输入的数字大于目标数字（本程序指定为5）时，提示“大了”；
        当小于时，提示“小了”；
        当相等时，提示“相等”，程序退出。
        程序中空白处分别应填入的代码是？（ ）   {
    =elif,break
    ~elif,continue
    ~else,break
    ~if,break
}

::8-5:: 已知列表a\=[1,2,3]，执行语句print(2*a)，显示的结果是？（ ） {
    =[1, 2, 3, 1, 2, 3]
    ~[1, 2, 3, 2, 4, 6]
    ~[2, 4, 6]
    ~[1, 2, 3, 3, 2, 1]
}

::8-6:: 已知列表List1\=[1,2,3,4,5]，要在列表List1中的最前面添加元素0，则下列操作可行的是？ {
    =List1\=[0]+List1
    ~List1\=List1+[0]
    ~List1\="0"+List1
    ~List1\=0+List1
}

::8-7:: 正确定义元组yuan的语句是？ {
    =yuan\=(1,2,3)
    ~yuan\=
    ~yuan\=\{1,2,3\}
    ~yuan\=[1,2,3]
}

//  name='The dog is ehite'
//  new_name=name[:11]+'white'
//  print(new_name[11:])
::8-8:: 下列程序的运行结果是？ {
    =white
    ~ehite
    ~hite
    ~The dog is white
}

::8-9:: 以下说法正确的是？ {
    =tuple()函数可以将列表转换为元组
    ~同一个元组中，元素的类型必须相同
    ~用del就可以删除元组中的元素
    ~列表和元组都是可变数据类型
}

::8-10:: 下列说法错误的是？ {
    =字典虽然不能利用下标访问元素，但可以排序
    ~列表、元组可以相互嵌套使用
    ~字典属于一对一映射关系的数据类型
    ~字典是可变的无序集合
}

::8-11:: 已知a\="123"，那么a*2的结果是？（ ） {
    ='123123'
    ~'246'
    ~123123
    ~246
}


//  ls = [888,'note',[2021,'Python',123],20]
//  print(ls[2][1])
::8-12:: 以下代码输出结果是？ {
    =Python
    ~note
    ~2021
    ~结果错误
}

::8-13:: 小红用一个列表score\=[80,78,92,96,100,88,95]来依次表示她七周的英文测验分数，如果想要查找到第三周的英文测验分数并将其删除，应该怎么做？ {
    =score.pop(2)
    ~score.pop(3)
    ~score[2]
    ~score[3]
}


// 编写一段程序，可以自动识别特定文本在某一段文字中出现的次数。例如：
//  a)程序开始运行后，输入一段包含有一个或多个“Python”字符串的文字；
// （提示为：请输入包含有一个或多个“Python”的文字：）
//  b)根据输入的字符串，程序会输出Python出现的次数。 
// 例如：如果输入的字符串为"Python是一种简单的编程语言。Python特别受欢迎。",
// 那么输出是：Python出现的次数是：2





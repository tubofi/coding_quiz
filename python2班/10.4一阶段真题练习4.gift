
::4-1:: 执行print(1 + 2 * 2+ 6 / 3) 的结果为? {
    =7.0
    ~4.0
    ~7
    ~4
}

::4-2:: 已知变量x\=2，语句print("x\=",x)的作用是？ {
    =在屏幕上输出x=2
    ~在屏幕上输出“x=”2
    ~在屏幕上输出2=2
    ~在屏幕上输出x=x
}

::4-3:: print(24%5),运算结果是？ {
    =4
    ~3
    ~2
    ~1
}

::4-4:: print(46//8)的结果是？ {
    =5
    ~6
    ~5.7
    ~5.75
}

::4-5:: Python启动后显示的提示符是？ {
    =>>>
    ~c\:\>
    ~---
    ~%%%
}

::4-6:: 已知变量a\=5，b\=6，执行语句a*\=a+b后，变量a的值为： {
    =55
    ~31
    ~30
    ~11
}

::4-7:: 下列表达式的值为True的是？ {
    ='3'>'2'
    ~'A'>'a'
    ~2>3
    ~'a'>'b'
}

::4-8:: 已知x\=5，y\=6，则表达式not(x!\=y)的值为： {
    =False
    ~True
    ~5
    ~6
}

::4-9:: 执行以下两行代码a\=123;print(a%100%10)结果应该是？{
    =3
    ~2
    ~1
    ~1.23
}

::4-10:: 下面描述中，不符合Python语言特点的是： {
    =Python程序通过编译后执行
    ~Python是一门面向对象的编程语言
    ~Python支持函数编程
    ~Python支持多个操作系统
}

::4-11:: 下列哪个不是Python的保留字？ {
    =do
    ~for
    ~if
    ~or
}

::4-12:: 执行下列语句后的显示结果是什么？
b \= 2 * a / 4
a \= 1
print(a,b)
{
    =报错
    ~1 , 0.5
    ~1 , 0
    ~0 , 1
}

::4-13:: a\=5; print(‘a+4') 以上两行代码的结果是？ {
    =a+4
    ~'a+4'
    ~无结果，出错
    ~9
}

//已知一头奶牛每天可以产20千克牛奶。N(N为变量)头奶牛7天可以产多少千克的牛奶？
// 1. 程序开始运行后，会有提示字符串：“请输入奶牛的头数：”，完成奶牛头数的输入；（提示字符串包括冒号，但不包括双引号）
// 2. 程序会根据输入的奶牛头数计算出总共产出的牛奶的重量，并将结果进行修饰然后输出。
//    示例：如果输入奶牛的头数为10，则输出“10头奶牛7天可以产1400千克的牛奶”


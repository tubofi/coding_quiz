
//2.3
::1-1:: d\=\(\)，d是一个空列表 {FALSE}

//2.5
::1-2:: 元组的访问速度比列表要快一些，如果定义了一系列常量值，并且主要用途仅仅是对其进行遍历而不需要进行任何修改，建议使用元组而不使用列表。 {TRUE}

//2.1
::1-3:: 若运行程序，则输出结果为<class ‘tuple’> {FALSE}

//2.6
::1-4:: 元组是用方括号来表示的，列表是用圆括号来表示的。 {FALSE}

//2.7
::1-5:: 下列程序的输出结果是('A','p','p,'l','e') {FALSE}

//2。13
::1-6:: 若s\=(1,2,3,4,5)，则执行s.remove(5)语句后，s的值是(1,2,3,4) {FALSE}

//2.14
::1-7:: len(tup)可以返回元组tup的长度 {TRUE}

//2.16
::1-8:: 元组是不可变的序列，这里的不可变包括不能对元组对象进行增加元素、删除元素，但修改元素位置是可以的。（ ） {FALSE}

//1.1
::1-9:: 以下程序的输出结果是 {
    =('a', 'b', 'c', 'd', 'e', 'f', 'g')
    ~['a', 'b', 'c', 'd', 'e', 'f', 'g']
    ~['abcdefg']
    ~'abcdefg'
}

//1.3
::1-10:: 下列语句，不能创建元组的是？ {
    =tup=(1)
    ~tup=()
    ~tup=1,2
    ~tup=(1,2)
}

//1.5
::1-11:: 下列关于元组的描述错误的是？ {
    =元组是可变的序列
    ~元组是可包含任意对象的有序集合
    ~元组和字符串都可以通过下标索引访问元素
    ~元组可以任意嵌套
}

//1.6
::1-12:: 对于元组里面的元素，可以执行的操作有？ {
    =读取
    ~添加
    ~修改
    ~删除
}

//1.9
::1-13:: 已知t\=(88,77,95,64,85)，那么t[1\:3]的结果是？ {
    =(77,95)
    ~[88,77]
    ~(88,77)
    ~[77,95]
}

//1.11
::1-14:: 有如下Python程序段： 执行上述程序段后，输出的结果为？（ ） {
    =x= 7
    ~x= 3
    ~7
    ~3
}








